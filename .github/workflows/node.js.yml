# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on: push

jobs:
  install:
    runs-on:  ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x]
        # node-version: [10.x, 12.x, 14.x, 15.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        os:
          - ubuntu-latest
          # - windows-latest
    steps:
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: yarn install
  build:
    runs-on:  ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x]
        os:
          - ubuntu-latest
    needs: install
    steps:
    - run: yarn build
  test:
    runs-on:  ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x]
        os:
          - ubuntu-latest
    needs: install
    steps:
    - run: yarn test --coverage
    - run: bin/run --help
    - run: yarn test:codecov:upload
    - run: bin/run run . --fail=high
  # linter:
  #   runs-on:  ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       node-version: [12.x]
  #       os:
  #         - ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v1
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #   - run: yarn install
  #   - run: yarn lint
  #   - run: yarn codecov
  # docker:
  #   runs-on:  ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       node-version: [12.x]
  #       os:
  #         - ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v1
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #   - run: yarn install
  #   - run: npm -g i .
  #   - run: dx-scanner run https://github.com/DXHeroes/dx-scanner --fail=off
  #   - run: docker build -f Dockerfile.github-action -t $CONTAINER_NAME .
